import { type NextPage } from "next";
import Head from "next/head";
import Navbar from "../components/Navbar";
import Footer from "../components/Footer";
import { useGeolocation } from "react-use";
import { useForm } from "react-hook-form";
import PostOfficeSelector from "../components/PostOfficeSelector";
import { InformationCircleIcon, XCircleIcon } from "@heroicons/react/outline";
import { api } from "../utils/api";
import { useSession } from "next-auth/react";
import { useState } from "react";
import { PostOffice } from "@prisma/client";
import { useRouter } from "next/router";

type FormData = {
  phone: string;
};

const CompleteProfilePage: NextPage = () => {
  const [postOffice, setPostOffice] = useState<PostOffice | undefined>(
    undefined
  );
  const [errorMsg, setErrorMsg] = useState<string | undefined>(undefined);
  const { register, handleSubmit, formState } = useForm<FormData>();
  const mutation = api.user.completeUserInfo.useMutation();
  const session = useSession();
  const rounter = useRouter();

  const onSubmit = (data: FormData) => {
    console.log(data);
    const userId = session.data?.user?.id;
    if (!userId) {
      setErrorMsg("User not logged in");
      return;
    } else if (!postOffice) {
      setErrorMsg("Post office not selected");
      return;
    }

    mutation.mutate(
      {
        userId: session.data?.user?.id,
        phone: data.phone,
        postCode: postOffice.postCode,
      },
      {
        onSuccess: () => {
          rounter.replace("/");
        },
        onError(error, variables, context) {
          alert("error");
          console.log("err", error);
          setErrorMsg(error.shape?.message);
        },
      }
    );
  };

  return (
    <>
      <Head>
        <title>Worker's Loogbook</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      {/* <NoticeToCompleteProfile /> */}
      <main>
        <div className="container mx-auto px-4 py-8">
          <h1 className="text-2xl font-bold leading-7 text-gray-900 sm:truncate sm:text-3xl">
            Complete Your Profile
          </h1>
          <hr className="mt-2 mb-10 border-2 border-dashed border-black opacity-50" />
          <div className="max-w-md">
            <form onSubmit={handleSubmit(onSubmit)}>
              <div>
                <label
                  htmlFor="phone-number"
                  className="block text-sm font-medium text-gray-700"
                >
                  Phone Number
                </label>
                <div className="relative mt-1 rounded-md shadow-sm">
                  <div className="absolute inset-y-0 left-0 flex items-center">
                    <label htmlFor="country" className="sr-only">
                      Country
                    </label>
                    <select
                      id="country"
                      name="country"
                      autoComplete="country"
                      className="h-full rounded-md border-transparent bg-transparent py-0 pl-3 pr-7 text-gray-500 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    >
                      <option>BD</option>
                    </select>
                  </div>
                  <input
                    type="text"
                    id="phone-number"
                    className="block w-full rounded-md border-gray-300 pl-16 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                    placeholder="+880 XXXXXXXXXXX"
                    minLength={11}
                    maxLength={11}
                    {...register("phone", {
                      required: true,
                      pattern: /^\d+$/,
                    })}
                  />
                </div>
                <p className="text-red-500">
                  {formState?.errors?.phone?.message}
                </p>
              </div>
              <div className="mt-8">
                <h1 className="text-md font-bold leading-7 text-gray-900 sm:truncate sm:text-lg">
                  Address Info
                </h1>
                <hr className="mt border border-dashed border-black opacity-50" />
              </div>
              <div className="mt-5">
                <label className="block text-sm font-medium text-gray-700">
                  Post Office
                </label>
                <PostOfficeSelector
                  onChange={(newPostOffice) => setPostOffice(newPostOffice)}
                />
              </div>
              <button
                type="submit"
                className="mt-10 inline-flex items-center rounded-md border border-transparent bg-indigo-100 px-4 py-2 text-sm font-medium text-indigo-700 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                disabled={mutation.isLoading}
              >
                Save
              </button>
            </form>
          </div>
          <div className="mt-10 rounded-md bg-blue-50 p-4">
            <div className="flex">
              <div className="flex-shrink-0">
                <InformationCircleIcon
                  className="h-5 w-5 text-blue-400"
                  aria-hidden="true"
                />
              </div>
              <div className="ml-3 flex-1 md:flex md:justify-between">
                <p className="text-sm text-blue-700">
                  If you don't know your exact post office, then just select the
                  one that you thing is nearest to your Home.
                </p>
              </div>
            </div>
          </div>
          {/* errors */}
          {errorMsg && (
            <div className="rounded-md bg-red-50 p-4">
              <div className="flex">
                <div className="flex-shrink-0">
                  <XCircleIcon
                    className="h-5 w-5 text-red-400"
                    aria-hidden="true"
                  />
                </div>
                <div className="ml-3">
                  <h3 className="text-sm font-medium text-red-800">
                    {/* There were 2 errors with your submission */}
                    <span className="text-red-500">{errorMsg}</span>
                  </h3>
                  {/* <div className="mt-2 text-sm text-red-700">
                    <ul role="list" className="list-disc space-y-1 pl-5">
                      <li>Your password must be at least 8 characters</li>
                      <li>
                        Your password must include at least one pro wrestling
                        finishing move
                      </li>
                    </ul>
                  </div> */}
                </div>
              </div>
            </div>
          )}
        </div>
      </main>
      <div className="mt-auto">
        <Footer />
      </div>
    </>
  );
};

export default CompleteProfilePage;
